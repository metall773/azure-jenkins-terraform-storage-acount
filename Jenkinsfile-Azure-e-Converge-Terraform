pipeline {
    parameters {
            string(name: 'TERRAFORM_ACTION', description: 'terrafrom action like as plan, apply, destroy', defaultValue: 'plan')
    }
    agent any
    stages {
        stage('Clone terraform repo') {
            steps {
                script {
                    sh label: 'git clone', script: '''
                    rm -Rf e-terraform
                    git clone https://github.com/metall773/e-terraform.git
                    '''
                }
            }
        }
        stage('logon az and terraform init') {
            steps {
                script {
                   withCredentials([azureServicePrincipal('Az-ServicePrincipal-4-E')]) {
                      sh label: 'terraform init', script: """
                      #!/bin/bash
                      export ARM_CLIENT_ID=$AZURE_CLIENT_ID
                      export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                      export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                      export ARM_TENANT_ID=$AZURE_TENANT_ID
                      export TF_VAR_ARM_CLIENT_ID=$AZURE_CLIENT_ID
                      export TF_VAR_ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                      export TF_VAR_ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                      export TF_VAR_ARM_TENANT_ID=$AZURE_TENANT_ID
  
                      ls -la e-terraform/
                      cd e-terraform
                      echo run terraform init
                      git checkout dev
                      /usr/local/bin/terraform init -no-color
                      echo run terraform plan
                      /usr/local/bin/terraform plan  -no-color
                      """
                   }
                }
            }
        }
        stage('terraform action') {
            steps {
                script {
                   withCredentials([azureServicePrincipal('Az-ServicePrincipal-4-E')]) {
                      sh label: 'terraform action', script: """
                      #!/bin/bash
                      if [[ "${params.TERRAFORM_ACTION}" != "plan" ]]; then
                         export ARM_CLIENT_ID=$AZURE_CLIENT_ID
                         export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                         export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                         export ARM_TENANT_ID=$AZURE_TENANT_ID
                         export TF_VAR_ARM_CLIENT_ID=$AZURE_CLIENT_ID
                         export TF_VAR_ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                         export TF_VAR_ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                         export TF_VAR_ARM_TENANT_ID=$AZURE_TENANT_ID
                         cd e-terraform
                         echo run terraform action
                         /usr/local/bin/terraform ${params.TERRAFORM_ACTION}  -no-color -auto-approve
                      fi
                      """
                   }
                }
            }
        }
    }
}
