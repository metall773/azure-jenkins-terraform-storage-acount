pipeline {
    parameters {
            string(name: 'TERRAFORM_ACTION', description: 'terrafrom action like as plan, applay, destroy', defaultValue: 'plan')
    }
    agent any
    stages {
        stage('Clone terraform repo') {
            steps {
                script {
                    sh label: 'git clone', script: '''
                    rm -Rf e-terraform
                    git clone https://github.com/metall773/e-terraform.git
                    '''
                }
            }
        }
        stage('logon az and terraform init') {
            steps {
                withCredentials([azureServicePrincipal('61f78e17-f6a2-4ac2-a4be-c4edfa1a20d6')]) {
                    sh ''
                }
                script {
                    sh label: 'terraform init', script: '''
                    export ARM_CLIENT_ID=$AZURE_CLIENT_ID
                    export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                    export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                    export ARM_TENANT_ID=$AZURE_TENANT_ID
                    
                    az account show
                    ls -la e-terraform/
                    cd e-terraform
                    /usr/local/bin/terraform init -no-color
                    /usr/local/bin/terraform ${params.TERRAFORM_ACTION}  -no-color
                    '''
                }
            }
        }
    }
}
